@page "/statistic"
@inherits QuestionsBase
@inject NavigationManager NavigationManager


<div class="container mt-3">
    @if (QuestionGroups == null)
    {
        @* <h3 class="text-center">Loading exams...</h3> *@
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                @* <span class="sr-only">Loading...</span> *@
            </div>
        </div>
    }
    else
    {
        <div class="container">
            <div class="row">
                <div class="col">
                    <h4>Groups</h4>
                </div>
            </div>
            <div class="row">
                @foreach (var questionGroup in QuestionGroups)
                {
                    <div class="row">
                        <div class="row border-bottom justify-content-center">
                            <div class="row ">
                                <div class="col" @onclick="() => HandleGroupClick(questionGroup.Id)">
                                    <h5>
                                        @questionGroup.Title
                                    </h5>
                                </div>
                                <div class="col">
                                    <button class="alert-danger" @onclick="() => RemoveStatisticAsync(questionGroup.Id)">Remove progress</button>
                                </div>

                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>



@code {
    private int CountNew(List<OutQuestionDTO> questions)
        => questions.Where(q => q.State == "New").Count();

    private int CountLearn(List<OutQuestionDTO> questions)
    => questions.Where(q => q.State == "Learning" || q.State == "Graduated").Count();

    private void HandleGroupClick(Guid questionGroupId)
    {
        NavigationManager.NavigateTo($"/statistic/{questionGroupId}");
    }

    private async Task RemoveStatisticAsync(Guid questionGroupId)
    {
        await StatisticService.RemoveStatisticAsync(questionGroupId);
    }

}
